@import url('https://fonts.googleapis.com/css2?family=Share+Tech+Mono&display=swap');

* {
  box-sizing: border-box;
  padding: 0;
  margin: 0;
}

li {
  list-style-type: none;
}

html {
  // width: 100%;
  display: flex;
  flex-grow: 1;
  justify-content: center;
  min-height: 100%;
  line-height: 1.3;
  min-width: 320px;
  color: $clr-text-01;
  font-size: $font-size-m;
  background-color: $clr-primary-01;

  font-family: "Share Tech Mono", monospace;
  font-weight: 400;
  font-style: normal;

  &::-webkit-scrollbar {
    height: 0px;
    width: 0px;
  }

  // @include mediaMax('m') {
  //   font-size: $font-mobile;
  // };
}

#root {
  flex-grow: 1;
  position: relative;
  display: flex;
  flex-direction: column;
  align-items: center;
}

body {
  position: relative;
  flex-grow: 1;
  // max-width: $body-container;
  display: flex;

  &.hold {
    overflow: hidden;
  }
}




// ::-webkit-scrollbar {
//     display: none;
// }

// html {
//     scrollbar-width: none;
// }

button {
  background: none;
  color: inherit;
  border: none;
  padding: 0;
  font: inherit;
  cursor: pointer;
  outline: inherit;
}

a {
  text-decoration: none;
  color: inherit;
  cursor: pointer;
}

input[type="number"]::-webkit-inner-spin-button,
input[type="number"]::-webkit-outer-spin-button {
  -webkit-appearance: none;
  margin: 0;
}

input[type="number"] {
  -moz-appearance: textfield;
}

fieldset {
  border: 0;
  margin: 0;
  padding: 0;
  min-width: 0;
}

$size: 35vh;

.cube {
	animation: rotate infinite normal 3s linear;
	height: $size;
	transform-style: preserve-3d;
	width: $size;
	position: absolute;
	top: calc(50% - #{$size/2});
	left: calc(50% - #{$size/2});
	perspective: 0;
	backface-visibility: visible;
	perspective-origin: 50% 50%;
	transform-style: preserve-3d;
	
	&__side {
		background: #ff006688;
		border: 2px solid #111;
		height: 100%;
		position: absolute;
		width: 100%;
		
		&--top {
			transform: rotateX(90deg) translateZ($size/2);
		}
		
		&--bottom {
		 	transform: rotateX(-90deg) translateZ($size/2);
		}
		
		&--left {
    		transform: rotateY(-90deg) translateZ($size/2);
		}
		
		&--right {
    		transform: rotateY(90deg) translateZ($size/2);
		}
		
		&--front {
    		transform: translateZ($size/2);
		}
		
		&--back {
    		transform: rotateY(180deg) translateZ($size/2);
		}
	}
}

@keyframes rotate {
	from {
		transform: rotate3d(1, 1, 1, 360deg);
	}
	to {
		transform: rotate3d(1, 0, 0, 0);
	}
}